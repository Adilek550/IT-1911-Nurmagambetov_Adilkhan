Practice-2
A train. Define the hierarchy of cars and locomotives. Create multiple objects. Assemble a train with a determination of its total carrying capacity or the number of passengers.



REQUIREMENTS.

1. Use only standard compilers and libraries.

2. When coding, conventions on the design of the code for the corresponding language should be used - code convention.

3. Use the capabilities of OOP: classes, inheritance, polymorphism, encapsulation.

4. Do not use the graphical interface! The application must be console.

5. Work with the console or the console menu should be minimal, since the MAIN OBJECTIVE of the TASK is to CHECK OOP PERCEPTION.

6. Use external data sources: files, DBMS

7. Transfer initialization data of objects using a constructor, function, or method (for example, for Java:

Student ob = new Student (456543, 19, "Smith");

Or use database repositories

8. Provide only the source code of the application. In addition, it is possible to explain in a free but concise form what was done and why.

Comment the whole code

9. Also, to complete the task, you need to study relational databases, and SQL.

10. package name kz.aitu.oop.practice.practice2  (include sql ddl)

11. send it to gitlab and commit link here. commit message - "My OOP practice 2 - train"